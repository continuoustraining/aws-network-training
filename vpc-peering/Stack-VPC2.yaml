AWSTemplateFormatVersion: 2010-09-09
Description: Deploy VPC Network 2

Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyPairParameter:
    Type: String
    Default: fortinet-workshop-troubleshooting
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the web server"

Mappings:
  RegionMap:
    # North Virginia
    us-east-1:
      linux2: "ami-0cc96feef8c6bbff3"
    # Paris
    eu-west-3:
      linux2: "ami-0adcddd3324248c4c"
    # Stockholm
    eu-north-1:
      linux2: "ami-3f36be41"
    # London
    eu-west-2:
      linux2: "ami-0d8e27447ec2c8410"
    # Ireland
    eu-west-1:
      linux2: "ami-0bbc25e23a7640b9b"
    # Frankfurt
    eu-central-1:
      linux2: "ami-x"
    # Tokyo
    ap-northeast-1:
      linux2: "ami-0c3fd0f5d33134a76"
    # Singapore
    ap-southeast-1:
      linux2: "ami-01f7527546b557442"
    # Sao Paulo
    sa-east-1:
      linux2: "ami-058943e7d9b9cabfb"

Resources:
  VPC2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.2.0.0/16
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: VPC-2

  InternetGateway2:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: IGW-2

  AttachGateway2:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC2
      InternetGatewayId: !Ref InternetGateway2

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC2
      CidrBlock: 10.2.0.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref "AWS::Region"
      Tags:
        - Key: Name
          Value: Public-Subnet-2

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC2
      CidrBlock: 10.2.2.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref "AWS::Region"
      Tags:
        - Key: Name
          Value: Private-Subnet-2

  NaclPublic2:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC2
      Tags:
      - Key: Name
        Value: NACL-Public-2

  NaclEntryPublicSshInbound2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NaclPublic2
      RuleNumber: '102'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '22'
        To: '22'

  NaclEntryPublicSshOutbound2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NaclPublic2
      RuleNumber: '102'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '22'
        To: '22'

  NaclEntryPublicCustomTcpInbound2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NaclPublic2
      RuleNumber: '103'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '1024'
        To: '65535'

  NaclEntryPublicAllTcpOutbound2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NaclPublic2
      RuleNumber: '103'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '0'
        To: '65535'

  NaclEntryPublicAllIcmpInbound2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NaclPublic2
      RuleNumber: '104'
      Protocol: "1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"

  NaclEntryPublicAllIcmpOutbound2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NaclPublic2
      RuleNumber: '101'
      Protocol: "1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"

  PublicSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      NetworkAclId:
        Ref: NaclPublic2 # change here to a private NACL

  SecurityGroupIngressEgress2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Limits security group Ingress traffic
      SecurityGroupIngress:
      - IpProtocol: tcp
        CidrIp: 0.0.0.0/0
        FromPort: 22
        ToPort: 22
      - IpProtocol: icmp
        CidrIp: 0.0.0.0/0
        FromPort: "-1"
        ToPort: "-1"
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"
      VpcId:
        Ref: VPC2
      Tags:
          - Key: Name
            Value: Public-SG-2

  Route2:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway2 #GatewayToInternet
    Properties:
      RouteTableId:
        Ref: RouteTablePublic2
      DestinationCidrBlock: 0.0.0.0/0
        #- 10.2.0.0/16
      GatewayId:
        Ref: InternetGateway2


  RouteTablePublic2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC2
      Tags:
      - Key: Name
        Value: Public-Route-Table-2

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: RouteTablePublic2

  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC2
      Tags:
      - Key: Name
        Value: Private-Route-Table-2

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: RouteTablePrivate2

  NaclPrivate2:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC2
      Tags:
      - Key: Name
        Value: NACL-Private-2

  PrivateSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      NetworkAclId:
        Ref: NaclPrivate2

  Ec2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceTypeParameter
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", linux2]
      KeyName:
        Ref: KeyPairParameter
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: SecurityGroupIngressEgress2
          SubnetId:
            Ref: PublicSubnet2
      Tags:
      - Key: Name
        Value: Public-Instance-2

Outputs:
  VPC2:
    Description: VPC 2
    Value: !Ref VPC2
  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2

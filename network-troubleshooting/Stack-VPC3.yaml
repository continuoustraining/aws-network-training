AWSTemplateFormatVersion: 2010-09-09
Description: Deploy VPC Network 3

Parameters:
  InstanceTypeParameter: 
    Type: String
    Default: t2.micro
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyPairParameter:
    Type: String
    Default: fortinet-workshop-troubleshooting
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the web server"
  EnvironmentType: 
    Description: The environment type
    Type: String
    Default: test
    AllowedValues: 
      - prod
      - test
    ConstraintDescription: must be a prod or test

Mappings: 
  RegionMap: 
    us-east-1: 
      test: "ami-0cc96feef8c6bbff3"

Resources:
  VPC3:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.3.0.0/16
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: VPC-3

  InternetGateway3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: IGW-3

  AttachGateway3:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC3
      InternetGatewayId: !Ref InternetGateway3

  PublicSubnet31:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC3
      CidrBlock: 10.3.0.0/24
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 'us-east-1'
      Tags:
        - Key: Name
          Value: Public-Subnet-3
  
  PublicSubnet32:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC3
      CidrBlock: 10.3.4.0/24
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 'us-east-1'
      Tags:
        - Key: Name
          Value: Public-Subnet-4

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC3
      CidrBlock: 10.3.3.0/24
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 'us-east-1'
      Tags:
        - Key: Name
          Value: Private-Subnet-3
  

  NaclPublic3:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC3
      Tags:
      - Key: Name
        Value: NACL-Public-3

  NaclEntryPublicSshInbound3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NaclPublic3
      RuleNumber: '102'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '22'
        To: '22'

  NaclEntryPublicCustomTcpInbound3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NaclPublic3
      RuleNumber: '103'
      Protocol: "6"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '1024'
        To: '65535'

  NaclEntryPublicAllIcmpInbound3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NaclPublic3
      RuleNumber: '104'
      Protocol: "1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"

  NaclEntryPublicAllTcpOutbound3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NaclPublic3
      RuleNumber: '100'
      Protocol: "6"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"
      PortRange:
        From: '0'
        To: '65535'

  NaclEntryPublicAllIcmpOutbound3:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: 
        Ref: NaclPublic3
      RuleNumber: '101'
      Protocol: "1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: "-1"
        Type: "-1"

  PublicSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet31
      NetworkAclId:
        Ref: NaclPublic3

  NaclPrivate3:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC3
      Tags:
      - Key: Name
        Value: NACL-Private-3

  PrivateSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      NetworkAclId:
        Ref: NaclPrivate3

  SecurityGroupIngressEgress3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Limits security group Ingress traffic
      SecurityGroupIngress:
      - IpProtocol: tcp
        CidrIp: 0.0.0.0/0
        FromPort: 22
        ToPort: 22
      - IpProtocol: icmp
        CidrIp: 0.0.0.0/0
        FromPort: "-1"
        ToPort: "-1"
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"
      VpcId:
        Ref: VPC3
      Tags:
          - Key: Name
            Value: Private-SG-3

  Route3:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway3 #GatewayToInternet
    Properties:
      RouteTableId:
        Ref: RouteTablePublic3
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway3

  RouteTablePublic3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC3
      Tags:
      - Key: Name
        Value: Public-Route-Table-3

  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet31 #PublicSubnet31 to make IGW not set in route tables
      RouteTableId:
        Ref: RouteTablePublic3
      
  RouteTablePrivate3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC3
      Tags:
      - Key: Name
        Value: Private-Route-Table-3

  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      RouteTableId:
        Ref: RouteTablePrivate3

  Ec2Instance3: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceTypeParameter 
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", !Ref EnvironmentType]
      KeyName: 
        Ref: KeyPairParameter
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: SecurityGroupIngressEgress3
          SubnetId: 
            Ref: PublicSubnet31
      Tags:
      - Key: Name
        Value: Public-Instance-3

Outputs:
  VPC3:
    Description: VPC 3
    Value: !Ref VPC3
  PublicSubnet31:
    Description: Public Subnet 3
    Value: !Ref PublicSubnet31